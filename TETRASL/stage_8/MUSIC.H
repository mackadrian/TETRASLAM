#ifndef MUSIC_H
#define MUSIC_H

#include "psg.h"

#define NUM_MELODY_NOTES 124

typedef struct
{
    int note;
    int duration;
} Note;

/*----- MUSIC: Tetris Theme A -----
Details: - Stores each pitch read from the online sequencer.
*/
extern Note tetris_melody[NUM_MELODY_NOTES] = {
    {NOTE_PAUSE, HALF_NOTE},
    {E6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {B5, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {C6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {D6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {E6, HALF_NOTE},
    {NOTE_PAUSE, QUARTER_NOTE},
    {D6, QUARTER_NOTE},
    {NOTE_PAUSE, QUARTER_NOTE},
    {C6, QUARTER_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {B5, EIGHTH_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {A5, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {A5, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {C6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {E6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {D6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {C6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {B5, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {B5, HALF_NOTE},
    {NOTE_PAUSE, QUARTER_NOTE},
    {B5, QUARTER_NOTE},
    {NOTE_PAUSE, QUARTER_NOTE},
    {C6, QUARTER_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {D6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {E6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {C6, FULL_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {A5, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {A5, HALF_NOTE},
    {NOTE_PAUSE, FULL_NOTE},
    {NOTE_PAUSE, FULL_NOTE},
    {NOTE_PAUSE, FULL_NOTE},
    {D6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {D6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {E6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {A6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {G6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {F6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {E6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {E6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {C6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {E6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {D6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {C6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {B5, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {B5, HALF_NOTE},
    {NOTE_PAUSE, QUARTER_NOTE},
    {B5, QUARTER_NOTE},
    {NOTE_PAUSE, QUARTER_NOTE},
    {C6, QUARTER_NOTE},
    {NOTE_PAUSE, QUARTER_NOTE},
    {D6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {E6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {C6, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {A5, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {NOTE_PAUSE, HALF_NOTE},
    {A5, HALF_NOTE}};

void start_music();
void update_music(UINT32 *time_elapsed);

#endif